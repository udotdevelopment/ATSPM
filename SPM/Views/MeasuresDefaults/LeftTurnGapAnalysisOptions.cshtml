@model SPM.Models.MeasuresDefaultsViewModel

<div id="left-turn-gap-analysis-options" role="tablist" aria-multiselectable="true" class="card mr-4 ml-4">
    <div class="card-header" role="tab">
        <a onclick="rotate(this)" data-toggle="collapse" data-parent="#left-turn-gap-analysis-options" href="#left-turn-gap-analysis-options-collapse" aria-expanded="false" aria-controls="left-turn-gap-analysis-options-collapse">
            <i class="fa fa-chevron-right mr-3" aria-hidden="true"></i> Left Turn Gap Analysis
        </a>
    </div>
    <div id="left-turn-gap-analysis-options-collapse" class="collapse" role="tabpanel">
        <div class="card-body">
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap1Min, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap1Min, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap1Min, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap1Max, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap1Max, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap1Max, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap2Min, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap2Min, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap2Min, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap2Max, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap2Max, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap2Max, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap3Min, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap3Min, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap3Min, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap3Max, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap3Max, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap3Max, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.Gap4Min, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.Gap4Min, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.Gap4Min, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.TrendLineGapThreshold, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.TrendLineGapThreshold, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.TrendLineGapThreshold, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.LeftTurnGapAnalysis.BinSize, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.LeftTurnGapAnalysis.BinSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeftTurnGapAnalysis.BinSize, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>
