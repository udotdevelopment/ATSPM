@model SPM.Models.MeasuresDefaultsViewModel

<div id="timing-and-actuations-options" role="tablist" aria-multiselectable="true" class="card mr-4 ml-4">
    <div class="card-header" role="tab">
        <a onclick="rotate(this)" data-toggle="collapse" data-parent="#timing-and-actuations-options" href="#timing-and-actuations-options-collapse" aria-expanded="false" aria-controls="timing-and-actuations-optionsCollapse">
            <i class="fa fa-chevron-right mr-3" aria-hidden="true"></i> Timing And Acutations
        </a>
    </div>
    <div id="timing-and-actuations-options-collapse" class="collapse" role="tabpanel">
        <div class="card-body">
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.TimingAndActuations.ShowLegend, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.TimingAndActuations.ShowLegend)
                    @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowLegend, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.TimingAndActuations.ShowHeaderForEachPhase, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.TimingAndActuations.ShowHeaderForEachPhase)
                    @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowHeaderForEachPhase, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.TimingAndActuations.CombineLanesForEachGroup, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.TimingAndActuations.CombineLanesForEachGroup)
                    @Html.ValidationMessageFor(model => model.TimingAndActuations.CombineLanesForEachGroup, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
            <div class="row p-1">
                <div class="col-9">
                    @Html.LabelFor(model => model.TimingAndActuations.DotAndBarSize, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-3 text-right">
                    @Html.EditorFor(model => model.TimingAndActuations.DotAndBarSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimingAndActuations.DotAndBarSize, "", new { id = "Description-error", @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="chart-options" role="tablist" aria-multiselectable="true" class="card">
            <div class="card-header bg-secondary" role="tab">
                <a onclick="rotate(this)" data-toggle="collapse" data-parent="#chart-options" href="#chart-options-collapse" aria-expanded="false" aria-controls="chart-options-collapse">
                    <i class="fa fa-chevron-right mr-3" aria-hidden="true"></i> Chart Options
                </a>
            </div>
            <div id="chart-options-collapse" class="collapse" role="tabpanel">
                <div class="card-body">
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowLegend, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowLegend)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowLegend, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowHeaderForEachPhase, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowHeaderForEachPhase)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowHeaderForEachPhase, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.CombineLanesForEachGroup, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.CombineLanesForEachGroup)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.CombineLanesForEachGroup, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.DotAndBarSize, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.DotAndBarSize, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.DotAndBarSize, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="vehicle-signal-display-options" role="tablist" aria-multiselectable="true" class="card">
            <div class="card-header bg-secondary" role="tab" sty;e>
                <a onclick="rotate(this)" data-toggle="collapse" data-parent="#vehicle-signal-display-options" href="#vehicle-signal-display-options-collapse" aria-expanded="false" aria-controls="vehicle-signal-display-options-collapse">
                    <i class="fa fa-chevron-right mr-3" aria-hidden="true"></i> Vehicle Signal Display Options
                </a>
            </div>
            <div id="vehicle-signal-display-options-collapse" class="collapse" role="tabpanel">
                <div class="card-body">
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ExtendVsdSearch, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ExtendVsdSearch, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ExtendVsdSearch, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowVehicleSignalDisplay, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowVehicleSignalDisplay)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowVehicleSignalDisplay, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowPedestrianIntervals, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowPedestrianIntervals)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowPedestrianIntervals, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ExtendStartStopSearch, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ExtendStartStopSearch, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ExtendStartStopSearch, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowPedestrianActuation, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowPedestrianActuation)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowPedestrianActuation, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowStopBarPresence, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowStopBarPresence)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowStopBarPresence, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowLaneByLaneCount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowLaneByLaneCount)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowLaneByLaneCount, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowAdvancedDilemmaZone, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowAdvancedDilemmaZone)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowAdvancedDilemmaZone, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.ShowAdvancedCount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.ShowAdvancedCount)
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.ShowAdvancedCount, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row p-1">
                        <div class="col-9">
                            @Html.LabelFor(model => model.TimingAndActuations.AdvancedOffset, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-3 text-right">
                            @Html.EditorFor(model => model.TimingAndActuations.AdvancedOffset, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimingAndActuations.AdvancedOffset, "", new { id = "Description-error", @class = "text-danger" })
                        </div>
                    </div>
                </div>
             </div>
        </div>
    </div>
</div>